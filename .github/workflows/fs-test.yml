name: file handling test in GH Script

on:
  pull_request:
env: 
  var_global: this is a global var
  var_job: this is a second global var
jobs:
  testing:
    runs-on: ubuntu-latest
    env: 
      var_job: this is a third job var
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v2
      
      - name: echoing
        run: echo "$var_global"

      - name: echoing
        run: echo ${{env.var_job}}

      - name: get issue body
        uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            var issueBody = ""
            p = github.issues.get({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo
              })
            console.log(p)

      - name: script debug
        uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log(context.payload )      
      - name: script debug
        uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log(process.env )          
            
      - name: open file properly
        id: read-report
        uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
              const fs = require('fs')
              try {
                  issueBody = fs.readFileSync("./src/reporting/dummy.md", "utf8")
                  returnLabel = "completed"
              } catch (err) {
                  issueBody = "**Report file not found.** Check pipeline for errors."
                  returnLabel = "failed2"
              }
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: issueBody
              })
              github.issues.addLabels({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  labels: [process.env.var_job]
              })
              
