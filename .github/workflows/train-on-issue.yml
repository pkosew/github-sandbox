name: HamaK training

on:
  issues:
    types: [opened, edited]
env:
  LABEL_MODEL_TRAINING: model-training
jobs:
  training:
    if: ${{ contains(github.event.issue.labels.*.name, LABEL_MODEL_TRAINING) }}
    runs-on: ubuntu-latest
    env: 
      LABEL_IN_PROGRESS: in progress
      LABEL_COMPLETED: completed
      LABEL_FAILED: failed
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v2
      - name: Get workflow run
        id: get-workflow-run
        uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const workflow_run = github.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{github.run_id}}
            })
            return workflow_run
      - name: Get result
        env:
          workflow_run_obj: steps.get-workflow-run.outputs.result
          workflow_run: ${{ toJson(steps.get-workflow-run.outputs.result) }}
        run: |
          echo "something"
          echo "$workflow_run"
          echo "${{steps.get-workflow-run.outputs.result.html_url}}"

      - name: Mark issue as a pipeline trigger
        uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Training workflow started."
            })
            github.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [$LABEL_IN_PROGRESS]
            })
      
      - name: Get result
        run: echo "${{steps.get-pwd.outputs.result}}"

      - name: Run model training
        run: echo "Dummy step - testing"

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Print pipeline report or failure
        uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs')
            try {
              issueBody = fs.readFileSync("./src/reporting/dummy.md", "utf8")
              returnLabel = $LABEL_COMPLETED
            } catch (err) {
              issueBody = "**Report file not found.**"
              returnLabel = $LABEL_FAILED
            }
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: issueBody
            })
            github.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: $LABEL_IN_PROGRESS
            })
            github.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [returnLabel]
            })

